plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.firebase-perf'
    id 'com.google.firebase.crashlytics'
    id 'org.jetbrains.kotlin.plugin.serialization'
}

def getProps(String propName) {
    def propsFile = rootProject.file('local.properties')
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        return props[propName]
    } else {
        return NullPointerException
    }
}

configurations {
    cleanedAnnotations
    implementation.exclude group: 'org.jetbrains', module: 'annotations'
}


android {
    namespace 'com.ncs.marioapp'
    compileSdk 36

    defaultConfig {
        applicationId "com.ncs.marioapp"
        minSdk 26
        targetSdk 36
        versionCode 17
        versionName "2.6"
        multiDexEnabled true


        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildFeatures {
        buildConfig true
        viewBinding true
        dataBinding true
    }

    buildTypes {

        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            //Base API URL
            buildConfigField("String", "API_BASE_URL", "\"${getProps("DEBUG_API_BASE_URL")}\"")

            //Auth Endpoint
            buildConfigField("String", "AUTH_ENDPOINT", "\"${getProps("AUTH_ENDPOINT")}\"")

            //Profile Endpoint
            buildConfigField("String", "PROFILE_ENDPOINT", "\"${getProps("PROFILE_ENDPOINT")}\"")

            //Event Endpoint
            buildConfigField("String","EVENT_ENDPOINT","\"${getProps("EVENT_ENDPOINT")}\"")

            //QR EndPoint
            buildConfigField("String","QR_ENDPOINT","\"${getProps("QR_ENDPOINT")}\"")

            //Merch Endpoint
            buildConfigField("String","MERCH_ENDPOINT","\"${getProps("MERCH_ENDPOINT")}\"")

            //Post Endpoint
            buildConfigField("String","POST_ENDPOINT","\"${getProps("POST_ENDPOINT")}\"")

            //Banner Endpoint
            buildConfigField("String","BANNER_ENDPOINT","\"${getProps("BANNER_ENDPOINT")}\"")

            //Reports Endpoint
            buildConfigField("String","REPORTS_ENDPOINT","\"${getProps("REPORTS_ENDPOINT")}\"")

            //Cloudinary Cloud Name
            buildConfigField("String","CLOUDINARY_CLOUD_NAME","\"${getProps("CLOUDINARY_CLOUD_NAME")}\"")

            //Cloudinary API KEY
            buildConfigField("String","CLOUDINARY_API_KEY","\"${getProps("CLOUDINARY_API_KEY")}\"")

            //Cloudinary API SECRET
            buildConfigField("String","CLOUDINARY_API_SECRET","\"${getProps("CLOUDINARY_API_SECRET")}\"")
        }

        release {
            debuggable false

            //Base API URL
            buildConfigField("String", "API_BASE_URL", "\"${getProps("RELEASE_API_BASE_URL")}\"")

            //Auth Endpoint
            buildConfigField("String", "AUTH_ENDPOINT", "\"${getProps("AUTH_ENDPOINT")}\"")

            //Profile Endpoint
            buildConfigField("String", "PROFILE_ENDPOINT", "\"${getProps("PROFILE_ENDPOINT")}\"")

            //Event Endpoint
            buildConfigField("String","EVENT_ENDPOINT","\"${getProps("EVENT_ENDPOINT")}\"")

            //QR EndPoint
            buildConfigField("String","QR_ENDPOINT","\"${getProps("QR_ENDPOINT")}\"")

            //Merch Endpoint
            buildConfigField("String","MERCH_ENDPOINT","\"${getProps("MERCH_ENDPOINT")}\"")

            //Post Endpoint
            buildConfigField("String","POST_ENDPOINT","\"${getProps("POST_ENDPOINT")}\"")

            //Banner Endpoint
            buildConfigField("String","BANNER_ENDPOINT","\"${getProps("BANNER_ENDPOINT")}\"")

            //Reports Endpoint
            buildConfigField("String","REPORTS_ENDPOINT","\"${getProps("REPORTS_ENDPOINT")}\"")

            //Cloudinary Cloud Name
            buildConfigField("String","CLOUDINARY_CLOUD_NAME","\"${getProps("CLOUDINARY_CLOUD_NAME")}\"")

            //Cloudinary API KEY
            buildConfigField("String","CLOUDINARY_API_KEY","\"${getProps("CLOUDINARY_API_KEY")}\"")

            //Cloudinary API SECRET
            buildConfigField("String","CLOUDINARY_API_SECRET","\"${getProps("CLOUDINARY_API_SECRET")}\"")


            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            ndk.debugSymbolLevel = "FULL"
        }

        ndkVersion '29.0.13599879 rc2'


    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    lint {
        checkReleaseBuilds false
    }
    ndkVersion '29.0.13599879 rc2'

}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.activity
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.navigation.fragment
    implementation libs.firebase.firestore.ktx
    implementation libs.firebase.firestore
    implementation libs.androidx.legacy.support.v4
    implementation libs.androidx.fragment.ktx
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core


    implementation(libs.lottie)

    //Gson
    implementation libs.gson


    //Timber
    implementation libs.timber

    //Utils library
    implementation libs.utils.core

    //Circular ImageView
    implementation libs.circleimageview

    //Glide
    implementation libs.glide
    implementation libs.okhttp3.integration
    annotationProcessor libs.compiler

    //ViewModel
    implementation libs.androidx.lifecycle.livedata.ktx.v291
    implementation libs.androidx.lifecycle.viewmodel.ktx.v291

    //Dagger Hilt
    implementation libs.hilt.android.v2562
    kapt libs.hilt.android.compiler.v2562
    implementation libs.androidx.hilt.common
    implementation libs.androidx.lifecycle.runtime.ktx

    implementation libs.truetime.android

    // Jetpack Navigation
    implementation (libs.androidx.navigation.fragment.ktx)
    implementation (libs.androidx.navigation.ui.ktx)


    //zxing qr scanner lib
    implementation (libs.zxing.android.embedded)

    //retrofit
    implementation libs.retrofit.v290
    implementation libs.converter.gson.v290
    implementation libs.adapter.rxjava2.v300
    implementation libs.logging.interceptor.v4120

    //Firebase messaging
    implementation libs.firebase.messaging.ktx

    //Firebase
    implementation platform(libs.firebase.bom)
    implementation libs.firebase.analytics

    //Firebase Dynamic links
    implementation libs.firebase.dynamic.links

    //Firebase Crashlytics
    implementation libs.firebase.crashlytics

    //Firebase performance
    implementation(libs.firebase.perf)

    //Markdown view
    implementation libs.library


    //Markdown Markdown library
    implementation libs.ext.tables
    implementation libs.core
    implementation libs.editor
    implementation libs.html
    implementation libs.image
    implementation libs.image.glide
    implementation libs.syntax.highlight
    implementation libs.ext.tasklist
    implementation libs.ext.strikethrough

    //Image view
    implementation libs.loupe
    implementation libs.exten

    //Shimmer Effect
    implementation libs.shimmer

    //Swipe to refresh
    implementation libs.androidx.swiperefreshlayout

    //slide to success
    implementation libs.slidetoact

    //play app updater
    implementation libs.app.update
    implementation libs.app.update.ktx

    //viewpager
    implementation libs.androidx.viewpager2

    implementation 'com.cloudinary:cloudinary-android:3.0.2'


    implementation 'com.facebook.fresco:fresco:3.6.0'

    implementation 'com.facebook.fresco:imagepipeline-native:3.6.0'
    implementation 'com.facebook.fresco:nativeimagetranscoder:3.6.0'
    implementation 'com.facebook.fresco:nativeimagefilters:3.6.0'


    implementation 'com.facebook.soloader:soloader:0.12.1'

    //flexbox
    implementation libs.flexbox

    // WorkManager
    implementation libs.androidx.work.runtime.ktx

    implementation(libs.kotlinx.serialization.json)

    implementation libs.review

    implementation libs.review.ktx

}


kapt {
    correctErrorTypes true
}
